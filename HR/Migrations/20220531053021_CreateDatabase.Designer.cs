// <auto-generated />
using System;
using HR.Models.db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.Migrations
{
    [DbContext(typeof(IkkmContext))]
    [Migration("20220531053021_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HR.Models.db.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("departmentName");

                    b.HasKey("DepartmentId");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("districtName");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("provinceId");

                    b.HasKey("Id");

                    b.ToTable("district", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpBoss", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BossId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("BossID");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.HasKey("Id");

                    b.ToTable("empBoss", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("EmpChildDob")
                        .HasColumnType("date")
                        .HasColumnName("empChildDOB");

                    b.Property<string>("EmpChildName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empChildName");

                    b.Property<string>("EmpChildSurname")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("empChildSurname");

                    b.Property<string>("EmpId")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("empChild", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmergencyContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("emergencyContactName");

                    b.Property<string>("EmergencyContactRelation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("emergencyContactRelation");

                    b.Property<string>("EmergencyContactSurname")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("emergencyContactSurname");

                    b.Property<string>("EmergencyContactTel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("emergencyContactTel");

                    b.Property<DateTime>("EmpDadDob")
                        .HasColumnType("date")
                        .HasColumnName("empDadDOB");

                    b.Property<string>("EmpDadJob")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("empDadJob");

                    b.Property<string>("EmpDadName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empDadName");

                    b.Property<string>("EmpDadSurname")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("empDadSurname");

                    b.Property<string>("EmpDadTel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empDadTel");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.Property<DateTime>("EmpMomDob")
                        .HasColumnType("date")
                        .HasColumnName("empMomDOB");

                    b.Property<string>("EmpMomJob")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("empMomJob");

                    b.Property<string>("EmpMomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empMomName");

                    b.Property<string>("EmpMomSurname")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("empMomSurname");

                    b.Property<string>("EmpMomTel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empMomTel");

                    b.Property<DateTime?>("EmpSpouseDob")
                        .HasColumnType("date")
                        .HasColumnName("empSpouseDOB");

                    b.Property<string>("EmpSpouseJob")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("empSpouseJob");

                    b.Property<string>("EmpSpouseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empSpouseName");

                    b.Property<string>("EmpSpouseSurname")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("empSpouseSurname");

                    b.Property<string>("EmpSpouseTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empSpouseTel");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("empContact", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApproveBy")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("approveBy");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int")
                        .HasColumnName("leaveID");

                    b.Property<DateTime>("LeaveStart")
                        .HasColumnType("datetime")
                        .HasColumnName("leaveStart");

                    b.Property<DateTime>("LeaveStop")
                        .HasColumnType("datetime")
                        .HasColumnName("leaveStop");

                    b.Property<byte[]>("RegistDateTime")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("registDateTime");

                    b.HasKey("Id");

                    b.HasIndex("LeaveId");

                    b.ToTable("empLeave", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Employee", b =>
                {
                    b.Property<string>("EmpId")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.Property<double>("BaseSalary")
                        .HasColumnType("float")
                        .HasColumnName("baseSalary");

                    b.Property<DateTime?>("Bod")
                        .HasColumnType("date")
                        .HasColumnName("bod");

                    b.Property<int>("District")
                        .HasColumnType("int")
                        .HasColumnName("district");

                    b.Property<string>("EmpCurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("empCurrentAddress");

                    b.Property<int>("EmpDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("empDepartmentID");

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empEmail");

                    b.Property<DateTime?>("EmpEnd")
                        .HasColumnType("date")
                        .HasColumnName("empEnd");

                    b.Property<int>("EmpGenderId")
                        .HasColumnType("int")
                        .HasColumnName("empGenderID");

                    b.Property<string>("EmpIdcardAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("empIDCardAddress");

                    b.Property<string>("EmpIdno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empIDNo");

                    b.Property<string>("EmpImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("empImage");

                    b.Property<string>("EmpJobName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empJobName");

                    b.Property<int>("EmpMarrySatatusId")
                        .HasColumnType("int")
                        .HasColumnName("empMarrySatatusID");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empName");

                    b.Property<int>("EmpPositionId")
                        .HasColumnType("int")
                        .HasColumnName("empPositionID");

                    b.Property<DateTime>("EmpStart")
                        .HasColumnType("date")
                        .HasColumnName("empStart");

                    b.Property<string>("EmpSurname")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("empSurname");

                    b.Property<string>("EmpTel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empTel");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("isDelete")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Probation")
                        .HasColumnType("int")
                        .HasColumnName("probation");

                    b.Property<int>("Province")
                        .HasColumnType("int")
                        .HasColumnName("province");

                    b.Property<string>("RegistBy")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("registBy");

                    b.Property<DateTime>("RegistDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registDateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("SkillSalary")
                        .HasColumnType("float")
                        .HasColumnName("skillSalary");

                    b.Property<int>("SubDistrict")
                        .HasColumnType("int")
                        .HasColumnName("subDistrict");

                    b.Property<int>("WorkingHrsId")
                        .HasColumnType("int")
                        .HasColumnName("workingHrsID");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int")
                        .HasColumnName("zipcode");

                    b.HasKey("EmpId")
                        .HasName("PK_employee_1");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpOt", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ApproveBy")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("approveBy");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.Property<DateTime>("OtDate")
                        .HasColumnType("date")
                        .HasColumnName("OT_Date");

                    b.Property<TimeSpan>("OtHrs")
                        .HasColumnType("time")
                        .HasColumnName("OT_hrs");

                    b.Property<int>("OtId")
                        .HasColumnType("int")
                        .HasColumnName("OT_id");

                    b.Property<DateTime>("RegistDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("registDateTime");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("OtId");

                    b.ToTable("empOT", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpSlibing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmpId")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.Property<DateTime?>("EmpSlibingDob")
                        .HasColumnType("date")
                        .HasColumnName("empSlibingDOB");

                    b.Property<string>("EmpSlibingJob")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("empSlibingJob");

                    b.Property<string>("EmpSlibingName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empSlibingName");

                    b.Property<string>("EmpSlibingSurname")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("empSlibingSurname");

                    b.Property<string>("EmpSlibingTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empSlibingTel");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("empSlibing", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpTimestamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("empID");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime")
                        .HasColumnName("timeIn");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime")
                        .HasColumnName("timeOut");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("empTimestamp", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("genderName");

                    b.HasKey("GenderId");

                    b.ToTable("gender", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Holiday", b =>
                {
                    b.Property<DateTime>("HolidayDate")
                        .HasColumnType("date")
                        .HasColumnName("holidayDate");

                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("holidayID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayId"), 1L, 1);

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("holidayName");

                    b.ToTable("holiday", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Leave", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("leaveID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveId"), 1L, 1);

                    b.Property<int>("LeaveDays")
                        .HasColumnType("int")
                        .HasColumnName("leaveDays");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("leaveType");

                    b.HasKey("LeaveId");

                    b.ToTable("leave", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.MarryStatus", b =>
                {
                    b.Property<int>("MarryStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("marryStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarryStatusId"), 1L, 1);

                    b.Property<string>("MarryStatus1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("marryStatus");

                    b.HasKey("MarryStatusId");

                    b.ToTable("marryStatus", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Ot", b =>
                {
                    b.Property<int>("OtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtId"), 1L, 1);

                    b.Property<double>("OtMutiple")
                        .HasColumnType("float")
                        .HasColumnName("OT_mutiple");

                    b.HasKey("OtId");

                    b.ToTable("OT", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("positionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"), 1L, 1);

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("positionName");

                    b.HasKey("PositionId");

                    b.ToTable("position", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("provinceName");

                    b.HasKey("Id");

                    b.ToTable("province", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Subdistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("districtId");

                    b.Property<string>("SubdistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("subdistrictName");

                    b.HasKey("Id");

                    b.ToTable("subdistrict", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.WorkingPeriod", b =>
                {
                    b.Property<int>("WorkingHrsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("workingHrsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkingHrsId"), 1L, 1);

                    b.Property<TimeSpan>("WorkingStartTime")
                        .HasColumnType("time(4)")
                        .HasColumnName("workingStartTime");

                    b.Property<TimeSpan>("WorkingStopTime")
                        .HasColumnType("time(4)")
                        .HasColumnName("workingStopTime");

                    b.HasKey("WorkingHrsId");

                    b.ToTable("workingPeriod", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.WorkingShift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shiftID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"), 1L, 1);

                    b.Property<int>("EmpId")
                        .HasColumnType("int")
                        .HasColumnName("empID");

                    b.Property<DateTime>("RegistDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("registDateTime");

                    b.Property<DateTime>("ShiftStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("shiftStartDate");

                    b.Property<DateTime>("ShiftStopDate")
                        .HasColumnType("datetime")
                        .HasColumnName("shiftStopDate");

                    b.Property<int>("WorkingHrsId")
                        .HasColumnType("int")
                        .HasColumnName("workingHrsID");

                    b.HasKey("ShiftId");

                    b.HasIndex("WorkingHrsId");

                    b.ToTable("workingShift", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.Zipcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("SubdistrictId")
                        .HasColumnType("int")
                        .HasColumnName("subdistrictId");

                    b.Property<string>("ZipcodeName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("zipcodeName");

                    b.HasKey("Id");

                    b.ToTable("zipcode", (string)null);
                });

            modelBuilder.Entity("HR.Models.db.EmpChild", b =>
                {
                    b.HasOne("HR.Models.db.Employee", "Emp")
                        .WithMany("EmpChildren")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_empChild_empChild");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("HR.Models.db.EmpContact", b =>
                {
                    b.HasOne("HR.Models.db.Employee", "Emp")
                        .WithMany("EmpContacts")
                        .HasForeignKey("EmpId")
                        .IsRequired()
                        .HasConstraintName("FK_empContact_employee");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("HR.Models.db.EmpLeave", b =>
                {
                    b.HasOne("HR.Models.db.Leave", "Leave")
                        .WithMany("EmpLeaves")
                        .HasForeignKey("LeaveId")
                        .IsRequired()
                        .HasConstraintName("FK_empLeave_leave");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("HR.Models.db.EmpOt", b =>
                {
                    b.HasOne("HR.Models.db.Employee", "Emp")
                        .WithMany("EmpOts")
                        .HasForeignKey("EmpId")
                        .IsRequired()
                        .HasConstraintName("FK_empOT_empOT");

                    b.HasOne("HR.Models.db.Ot", "Ot")
                        .WithMany("EmpOts")
                        .HasForeignKey("OtId")
                        .IsRequired()
                        .HasConstraintName("FK_empOT_OT");

                    b.Navigation("Emp");

                    b.Navigation("Ot");
                });

            modelBuilder.Entity("HR.Models.db.EmpSlibing", b =>
                {
                    b.HasOne("HR.Models.db.Employee", "Emp")
                        .WithMany("EmpSlibings")
                        .HasForeignKey("EmpId")
                        .HasConstraintName("FK_empSlibing_employee");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("HR.Models.db.EmpTimestamp", b =>
                {
                    b.HasOne("HR.Models.db.Employee", "Emp")
                        .WithMany("EmpTimestamps")
                        .HasForeignKey("EmpId")
                        .IsRequired()
                        .HasConstraintName("FK_empTimestamp_employee");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("HR.Models.db.WorkingShift", b =>
                {
                    b.HasOne("HR.Models.db.WorkingPeriod", "WorkingHrs")
                        .WithMany("WorkingShifts")
                        .HasForeignKey("WorkingHrsId")
                        .IsRequired()
                        .HasConstraintName("FK_workingShift_workingPeriod");

                    b.Navigation("WorkingHrs");
                });

            modelBuilder.Entity("HR.Models.db.Employee", b =>
                {
                    b.Navigation("EmpChildren");

                    b.Navigation("EmpContacts");

                    b.Navigation("EmpOts");

                    b.Navigation("EmpSlibings");

                    b.Navigation("EmpTimestamps");
                });

            modelBuilder.Entity("HR.Models.db.Leave", b =>
                {
                    b.Navigation("EmpLeaves");
                });

            modelBuilder.Entity("HR.Models.db.Ot", b =>
                {
                    b.Navigation("EmpOts");
                });

            modelBuilder.Entity("HR.Models.db.WorkingPeriod", b =>
                {
                    b.Navigation("WorkingShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
